"""
Django settings for WeeklyJournals project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'valeriuovidiu1999@gmail.com'
EMAIL_HOST_PASSWORD = 'zmqyrihvowscxwag'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xu$2*%(vznki6gjje%ro3&d!o_ax*l5!ns3n^183tfd22si&%g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'rest_framework',   
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',   
    'django.contrib.staticfiles',
    'charts',   
    'bootstrap5',
    "accounts",  
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  
   
ROOT_URLCONF = 'weekly_journals.urls'  

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'weekly_journals','templates'),  # Directorul rădăcină al proiectului
            os.path.join(BASE_DIR, 'accounts', 'templates'),  # Directorul "templates" al aplicației "accounts"
            os.path.join(BASE_DIR, 'charts', 'templates',),  # Directorul "templates" al aplicației "charts"
        ],     
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',    
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',     
            ],   
        },
    },
]

WSGI_APPLICATION = 'weekly_journals.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Jurnals',
        'USER': 'postgres',
        'PASSWORD': 'ovidiu',
        'HOST': 'localhost',  
        'PORT': '5432',
     }  
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL= 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'   
STATICFILES_DIRS = [
    BASE_DIR / "charts\static",     
    BASE_DIR / "charts/media"    ,
    BASE_DIR / "accounts\static",      
]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')   
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'charts\static'),
                    os.path.join(BASE_DIR, 'accounts\static')]    
